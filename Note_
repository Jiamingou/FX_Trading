# 把自己写的方程放在mqh文件里面，然后放到Include的文件夹，当我们需要的时候，在页头导入这个：
    # include <文件的名字.mqh>


---------------------------------------------------------------------------------------------------------------
########## 关于Print与Alert ##########
1. Print（“”）只会在控制台出现
2. Alert（“”）会在程序内弹出提示框


---------------------------------------------------------------------------------------------------------------
########## 关于数组Array ##########
1.
- 先输入数据类型，然后再在[]内输入想要的存储空间，然后再在{}里输入数组
    int MinStopLevel[4] = {10,20,40,100} 
- 取出数组里的数字？使用相应的Index（Zero Based Indexing）
    MinStopLevel[2]  # 输出为40
    
2. 这个给个好玩的运用例子

   Alert(""); #隔行
   string Weekdays[7] = {"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};
   Alert(Weekdays[DayOfWeek()]);  # DayOfWeek()函数会返回工作日的数字，然后我们可以将其转化为名称，例如返回2则为Tuesday。


---------------------------------------------------------------------------------------------------------------
########## 关于Input ##########（我们需要在页头加一个 #property show_input）<-那么就可以进行更改了
1. input类型不可以在代码框内进行更改
     input int takeProfitPips = 40; 

2. extern的类型可以在代码框内进行更改，例如stopLossPips++;（将输入的值加一）
     extern int stopLossPips = 30;  


---------------------------------------------------------------------------------------------------------------
########## 关于条件控制 ##########
1.

        int DayofWeek = dayofWeek()  # 初始化，并假设我们尝试去call这个function。

        If (DayofWeek ==1)
        {
            Alert("今天是周一");
        }
        else if ( DayofWeek ==2 || DayofWeek ==3 || DayofWeek ==4 )   # ||是或者的意思
        {
            Alert("今天是：”+ DayofWeek);
        }
        else
        {
            Alert("日期错误”);
        }


2. 

        int DayofWeek = dayofWeek() 

        switch (DayofWeek)
        {
            case 1 : Alert("前面的一代表了周一");break;
            case 2 : Alert("前面的二代表了周二");break;
            case 3 : Alert("前面的三代表了周三");break;
            case 4 : Alert("前面的四代表了周四");break;
            case 5 : Alert("前面的五代表了周五");break;
            case 6 : Alert("前面的六代表了周六");break;
            case 0 : Alert("前面的零代表了周日");break;
            default : Alert("这是其它没有值的情况，就错误情况");break;

        }


---------------------------------------------------------------------------------------------------------------
########## 关于方程创建 ##########

# 首先肯定先要确定方程的数据类型

1.
        # 我们要确定好每个数据的类型，还要保证最后返回一个值
        
        double CalculateStopLoss(bool isLong, double entryPrice, int pips)        
        {
           double stopLoss;

           if(isLong)  //if long position
           {
              stopLoss =  entryPrice - pips * GetPipValue();
           }
           else
           {
              stopLoss = entryPrice + pips * GetPipValue();
           }
           return stopLoss;

        }

2.
        double GetPipValue()
        {
           if(Digits>=4)
           {
              return 0.0001;
           }
           else
           {
              return 0.01;
           }
        }


---------------------------------------------------------------------------------------------------------------
########## 关于循环 ##########























